version: v1alpha1 # Indicates the schema used to decode the contents.
debug: false # Enable verbose logging to the console.
persist: true
# Provides machine specific configuration options.
machine:
    type: controlplane # Defines the role of the machine within the cluster.
    token: r5dhgg.vopxqctodyo3mfdz # The `token` is used by a machine to join the PKI of the cluster.
    # The root certificate authority of the PKI.
    ca:
        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJQakNCOGFBREFnRUNBaEJYZkg3VE5ZamJsMmNoV0N5MHZoZUFNQVVHQXl0bGNEQVFNUTR3REFZRFZRUUsKRXdWMFlXeHZjekFlRncweU5UQTNNRFV5TVRRek1EaGFGdzB6TlRBM01ETXlNVFF6TURoYU1CQXhEakFNQmdOVgpCQW9UQlhSaGJHOXpNQ293QlFZREsyVndBeUVBUHV4RktLSkFjMFQzRzBYbnNuRHNWM2VFck1sZTAvK3pja0p0CmhRNUtzRldqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDaERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUkKS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVUUo1LzR1R0w5eUREQ01tVwpWT3FiYkRRcWlTQXdCUVlESzJWd0EwRUFDa3k5Qi9MMUpyc05FbE5KbERSTmE4ZEhzSkNXaWZvUWhweGlOSHFxCnRjRTNYc0h6cjE3cEhtaXJJSlIzU0h3WDdVREcxOHF4Y3hlUmt5SllGZS9hQVE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
        key: LS0tLS1CRUdJTiBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0KTUM0Q0FRQXdCUVlESzJWd0JDSUVJTzhiM3RKYUNlUVlSbkdGUlVPQlcrazhLY0JQME8xdmJYYkU2ZTdTd2lYbwotLS0tLUVORCBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0K
    # Extra certificate subject alternative names for the machine's certificate.
    certSANs: []
    #   # Uncomment this to enable SANs.
    #   - 10.0.0.10
    #   - 172.16.0.10
    #   - 192.168.0.10

    # Used to provide additional options to the kubelet.
    kubelet:
        image: ghcr.io/siderolabs/kubelet:v1.33.1 # The `image` field is an optional reference to an alternative kubelet image.
        defaultRuntimeSeccompProfileEnabled: true # Enable container runtime default Seccomp profile.
        # The `nodeIP` field is used to configure `--node-ip` flag for the kubelet.
        nodeIP:
            # The `validSubnets` field configures the networks to pick kubelet node IP from.
            validSubnets:
                - 172.29.232.0/24
        disableManifestsDirectory: true # The `disableManifestsDirectory` field configures the kubelet to get static pod manifests from the /etc/kubernetes/manifests directory.
        
        # # The `ClusterDNS` field is an optional reference to an alternative kubelet clusterDNS ip list.
        # clusterDNS:
        #     - 10.96.0.10
        #     - 169.254.2.53

        # # The `extraArgs` field is used to provide additional flags to the kubelet.
        # extraArgs:
        #     key: value

        # # The `extraMounts` field is used to add additional mounts to the kubelet container.
        # extraMounts:
        #     - destination: /var/lib/example # Destination is the absolute path where the mount will be placed in the container.
        #       type: bind # Type specifies the mount kind.
        #       source: /var/lib/example # Source specifies the source path of the mount.
        #       # Options are fstab style mount options.
        #       options:
        #         - bind
        #         - rshared
        #         - rw

        # # The `extraConfig` field is used to provide kubelet configuration overrides.
        # extraConfig:
        #     serverTLSBootstrap: true

        # # The `KubeletCredentialProviderConfig` field is used to provide kubelet credential configuration.
        # credentialProviderConfig:
        #     apiVersion: kubelet.config.k8s.io/v1
        #     kind: CredentialProviderConfig
        #     providers:
        #         - apiVersion: credentialprovider.kubelet.k8s.io/v1
        #           defaultCacheDuration: 12h
        #           matchImages:
        #             - '*.dkr.ecr.*.amazonaws.com'
        #             - '*.dkr.ecr.*.amazonaws.com.cn'
        #             - '*.dkr.ecr-fips.*.amazonaws.com'
        #             - '*.dkr.ecr.us-iso-east-1.c2s.ic.gov'
        #             - '*.dkr.ecr.us-isob-east-1.sc2s.sgov.gov'
        #           name: ecr-credential-provider
    # Provides machine specific network configuration options.
    network:
        # `interfaces` is used to define the network interface configuration.
        interfaces:
            - interface: enp1s0 # The interface name.
              dhcp: true # Indicates if DHCP should be used to configure the interface.
              # Virtual (shared) IP address configuration.
              vip:
                ip: 172.29.232.40 # Specifies the IP address to be used.
              
              # # Picks a network device using the selector.

              # # select a device with bus prefix 00:*.
              # deviceSelector:
              #     busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.
              # # select a device with mac address matching `*:f0:ab` and `virtio` kernel driver.
              # deviceSelector:
              #     hardwareAddr: '*:f0:ab' # Device hardware (MAC) address, supports matching by wildcard.
              #     driver: virtio_net # Kernel driver, supports matching by wildcard.
              # # select a device with bus prefix 00:*, a device with mac address matching `*:f0:ab` and `virtio` kernel driver.
              # deviceSelector:
              #     - busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.
              #     - hardwareAddr: '*:f0:ab' # Device hardware (MAC) address, supports matching by wildcard.
              #       driver: virtio_net # Kernel driver, supports matching by wildcard.

              # # Assigns static IP addresses to the interface.
              # addresses:
              #     - 10.5.0.0/16
              #     - 192.168.3.7

              # # A list of routes associated with the interface.
              # routes:
              #     - network: 0.0.0.0/0 # The route's network (destination).
              #       gateway: 10.5.0.1 # The route's gateway (if empty, creates link scope route).
              #     - network: 10.2.0.0/16 # The route's network (destination).
              #       gateway: 10.2.0.1 # The route's gateway (if empty, creates link scope route).

              # # Bond specific options.
              # bond:
              #     # The interfaces that make up the bond.
              #     interfaces:
              #         - enp2s0
              #         - enp2s1
              #     # Picks a network device using the selector.
              #     deviceSelectors:
              #         - busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.
              #         - hardwareAddr: '*:f0:ab' # Device hardware (MAC) address, supports matching by wildcard.
              #           driver: virtio_net # Kernel driver, supports matching by wildcard.
              #     mode: 802.3ad # A bond option.
              #     lacpRate: fast # A bond option.

              # # Bridge specific options.
              # bridge:
              #     # The interfaces that make up the bridge.
              #     interfaces:
              #         - enxda4042ca9a51
              #         - enxae2a6774c259
              #     # Enable STP on this bridge.
              #     stp:
              #         enabled: true # Whether Spanning Tree Protocol (STP) is enabled.

              # # Configure this device as a bridge port.
              # bridgePort:
              #     master: br0 # The name of the bridge master interface

              # # DHCP specific options.
              # dhcpOptions:
              #     routeMetric: 1024 # The priority of all routes received via DHCP.

              # # Wireguard specific configuration.

              # # wireguard server example
              # wireguard:
              #     privateKey: ABCDEF... # Specifies a private key configuration (base64 encoded).
              #     listenPort: 51111 # Specifies a device's listening port.
              #     # Specifies a list of peer configurations to apply to a device.
              #     peers:
              #         - publicKey: ABCDEF... # Specifies the public key of this peer.
              #           endpoint: 192.168.1.3 # Specifies the endpoint of this peer entry.
              #           # AllowedIPs specifies a list of allowed IP addresses in CIDR notation for this peer.
              #           allowedIPs:
              #             - 192.168.1.0/24
              # # wireguard peer example
              # wireguard:
              #     privateKey: ABCDEF... # Specifies a private key configuration (base64 encoded).
              #     # Specifies a list of peer configurations to apply to a device.
              #     peers:
              #         - publicKey: ABCDEF... # Specifies the public key of this peer.
              #           endpoint: 192.168.1.2:51822 # Specifies the endpoint of this peer entry.
              #           persistentKeepaliveInterval: 10s # Specifies the persistent keepalive interval for this peer.
              #           # AllowedIPs specifies a list of allowed IP addresses in CIDR notation for this peer.
              #           allowedIPs:
              #             - 192.168.1.0/24
        
        # # Used to statically set the nameservers for the machine.
        # nameservers:
        #     - 8.8.8.8
        #     - 1.1.1.1

        # # Used to statically set arbitrary search domains.
        # searchDomains:
        #     - example.org
        #     - example.com

        # # Allows for extra entries to be added to the `/etc/hosts` file
        # extraHostEntries:
        #     - ip: 192.168.1.100 # The IP of the host.
        #       # The host alias.
        #       aliases:
        #         - example
        #         - example.domain.tld

        # # Configures KubeSpan feature.
        # kubespan:
        #     enabled: true # Enable the KubeSpan feature.
    # Used to provide instructions for installations.
    install:
        disk: /dev/nvme0n1 # The disk used for installations.
        image: factory.talos.dev/metal-installer-secureboot/ede89ce2a46f773b96875ab18e7c9afa3e5bc41cd21ec920e92bf85949a14f69:v1.10.4 # Allows for supplying the image used to perform the installation.
        wipe: false # Indicates if the installation disk should be wiped at installation time.
        
        # # Look up disk using disk attributes like model, size, serial and others.
        # diskSelector:
        #     size: 4GB # Disk size.
        #     model: WDC* # Disk model `/sys/block/<dev>/device/model`.
        #     busPath: /pci0000:00/0000:00:17.0/ata1/host0/target0:0:0/0:0:0:0 # Disk bus path.

        # # Allows for supplying extra kernel args via the bootloader.
        # extraKernelArgs:
        #     - talos.platform=metal
        #     - reboot=k
    # Used to configure the machine's container image registry mirrors.
    registries: {}
    # # Specifies mirror configuration for each registry host namespace.
    # mirrors:
    #     ghcr.io:
    #         # List of endpoints (URLs) for registry mirrors to use.
    #         endpoints:
    #             - https://registry.insecure
    #             - https://ghcr.io/v2/

    # # Specifies TLS & auth configuration for HTTPS image registries.
    # config:
    #     registry.insecure:
    #         # The TLS configuration for the registry.
    #         tls:
    #             insecureSkipVerify: true # Skip TLS server certificate verification (not recommended).
    #             
    #             # # Enable mutual TLS authentication with the registry.
    #             # clientIdentity:
    #             #     crt: LS0tIEVYQU1QTEUgQ0VSVElGSUNBVEUgLS0t
    #             #     key: LS0tIEVYQU1QTEUgS0VZIC0tLQ==
    #         
    #         # # The auth configuration for this registry.
    #         # auth:
    #         #     username: username # Optional registry authentication.
    #         #     password: password # Optional registry authentication.

    # Machine system disk encryption configuration.
    systemDiskEncryption:
        # State partition encryption.
        state:
            provider: luks2 # Encryption provider to use for the encryption.
            # Defines the encryption keys generation and storage method.
            keys:
                - slot: 0 # Key slot number for LUKS2 encryption.
                  # Enable TPM based disk encryption.
                  tpm: {}
                  
                  # # KMS managed encryption key.
                  # kms:
                  #     endpoint: https://192.168.88.21:4443 # KMS endpoint to Seal/Unseal the key.
            
            # # Cipher kind to use for the encryption. Depends on the encryption provider.
            # cipher: aes-xts-plain64

            # # Defines the encryption sector size.
            # blockSize: 4096

            # # Additional --perf parameters for the LUKS2 encryption.
            # options:
            #     - no_read_workqueue
            #     - no_write_workqueue
        # Ephemeral partition encryption.
        ephemeral:
            provider: luks2 # Encryption provider to use for the encryption.
            # Defines the encryption keys generation and storage method.
            keys:
                - slot: 0 # Key slot number for LUKS2 encryption.
                  # Enable TPM based disk encryption.
                  tpm: {}
                  
                  # # KMS managed encryption key.
                  # kms:
                  #     endpoint: https://192.168.88.21:4443 # KMS endpoint to Seal/Unseal the key.
            
            # # Cipher kind to use for the encryption. Depends on the encryption provider.
            # cipher: aes-xts-plain64

            # # Defines the encryption sector size.
            # blockSize: 4096

            # # Additional --perf parameters for the LUKS2 encryption.
            # options:
            #     - no_read_workqueue
            #     - no_write_workqueue
    # Features describe individual Talos features that can be switched on or off.
    features:
        rbac: true # Enable role-based access control (RBAC).
        stableHostname: true # Enable stable default hostname.
        apidCheckExtKeyUsage: true # Enable checks for extended key usage of client certificates in apid.
        diskQuotaSupport: true # Enable XFS project quota support for EPHEMERAL partition and user disks.
        # KubePrism - local proxy/load balancer on defined port that will distribute
        kubePrism:
            enabled: true # Enable KubePrism support - will start local load balancing proxy.
            port: 7445 # KubePrism port.
        # Configures host DNS caching resolver.
        hostDNS:
            enabled: true # Enable host DNS caching resolver.
            forwardKubeDNSToHost: true # Use the host DNS resolver as upstream for Kubernetes CoreDNS pods.
        
        # # Configure Talos API access from Kubernetes pods.
        # kubernetesTalosAPIAccess:
        #     enabled: true # Enable Talos API access from Kubernetes pods.
        #     # The list of Talos API roles which can be granted for access from Kubernetes pods.
        #     allowedRoles:
        #         - os:reader
        #     # The list of Kubernetes namespaces Talos API access is available from.
        #     allowedKubernetesNamespaces:
        #         - kube-system
    # Configures the node labels for the machine.
    nodeLabels:
        node.kubernetes.io/exclude-from-external-load-balancers: ""
    
    # # Provides machine specific control plane configuration options.

    # # ControlPlane definition example.
    # controlPlane:
    #     # Controller manager machine specific configuration options.
    #     controllerManager:
    #         disabled: false # Disable kube-controller-manager on the node.
    #     # Scheduler machine specific configuration options.
    #     scheduler:
    #         disabled: true # Disable kube-scheduler on the node.

    # # Used to provide static pod definitions to be run by the kubelet directly bypassing the kube-apiserver.

    # # nginx static pod.
    # pods:
    #     - apiVersion: v1
    #       kind: pod
    #       metadata:
    #         name: nginx
    #       spec:
    #         containers:
    #             - image: nginx
    #               name: nginx

    # # Allows the addition of user specified files.

    # # MachineFiles usage example.
    # files:
    #     - content: '...' # The contents of the file.
    #       permissions: 0o666 # The file's permissions in octal.
    #       path: /tmp/file.txt # The path of the file.
    #       op: append # The operation to use

    # # The `env` field allows for the addition of environment variables.

    # # Environment variables definition examples.
    # env:
    #     GRPC_GO_LOG_SEVERITY_LEVEL: info
    #     GRPC_GO_LOG_VERBOSITY_LEVEL: "99"
    #     https_proxy: http://SERVER:PORT/
    # env:
    #     GRPC_GO_LOG_SEVERITY_LEVEL: error
    #     https_proxy: https://USERNAME:PASSWORD@SERVER:PORT/
    # env:
    #     https_proxy: http://DOMAIN\USERNAME:PASSWORD@SERVER:PORT/

    # # Used to configure the machine's time settings.

    # # Example configuration for cloudflare ntp server.
    # time:
    #     disabled: false # Indicates if the time service is disabled for the machine.
    #     # description: |
    #     servers:
    #         - time.cloudflare.com
    #     bootTimeout: 2m0s # Specifies the timeout when the node time is considered to be in sync unlocking the boot sequence.

    # # Used to configure the machine's sysctls.

    # # MachineSysctls usage example.
    # sysctls:
    #     kernel.domainname: talos.dev
    #     net.ipv4.ip_forward: "0"
    #     net/ipv6/conf/eth0.100/disable_ipv6: "1"

    # # Used to configure the machine's sysfs.

    # # MachineSysfs usage example.
    # sysfs:
    #     devices.system.cpu.cpu0.cpufreq.scaling_governor: performance

    # # Configures the udev system.
    # udev:
    #     # List of udev rules to apply to the udev system
    #     rules:
    #         - SUBSYSTEM=="drm", KERNEL=="renderD*", GROUP="44", MODE="0660"

    # # Configures the logging system.
    # logging:
    #     # Logging destination.
    #     destinations:
    #         - endpoint: tcp://1.2.3.4:12345 # Where to send logs. Supported protocols are "tcp" and "udp".
    #           format: json_lines # Logs format.

    # # Configures the kernel.
    # kernel:
    #     # Kernel modules to load.
    #     modules:
    #         - name: brtfs # Module name.

    # # Configures the seccomp profiles for the machine.
    # seccompProfiles:
    #     - name: audit.json # The `name` field is used to provide the file name of the seccomp profile.
    #       # The `value` field is used to provide the seccomp profile.
    #       value:
    #         defaultAction: SCMP_ACT_LOG

    # # Override (patch) settings in the default OCI runtime spec for CRI containers.

    # # override default open file limit
    # baseRuntimeSpecOverrides:
    #     process:
    #         rlimits:
    #             - hard: 1024
    #               soft: 1024
    #               type: RLIMIT_NOFILE

    # # Configures the node annotations for the machine.

    # # node annotations example.
    # nodeAnnotations:
    #     customer.io/rack: r13a25

    # # Configures the node taints for the machine. Effect is optional.

    # # node taints example.
    # nodeTaints:
    #     exampleTaint: exampleTaintValue:NoSchedule
# Provides cluster specific configuration options.
cluster:
    id: 0TaE6BNuWJ3exex69ZptfHYLEPgxErsg8Yz2xe1hJHo= # Globally unique identifier for this cluster (base64 encoded random 32 bytes).
    secret: Yxx9sA11QNrprkx+XXPCzTl8oWBGbGuhcGNat0cmFI8= # Shared secret of cluster (base64 encoded random 32 bytes).
    # Provides control plane specific configuration options.
    controlPlane:
        endpoint: https://k8s.prod.mehar.internal:6443 # Endpoint is the canonical controlplane endpoint, which can be an IP address or a DNS hostname.
    clusterName: k8s-prod # Configures the cluster's name.
    # Provides cluster specific network configuration options.
    network:
        # The CNI used.
        cni:
            name: custom # Name of CNI to use.
            # URLs containing manifests to apply for the CNI.
            urls:
                - http://172.29.232.2/k8s/prod/cilium.yaml
        dnsDomain: prod.mehar.internal # The domain used by Kubernetes DNS.
        # The pod subnet CIDR.
        podSubnets:
            - 100.96.0.0/11
        # The service subnet CIDR.
        serviceSubnets:
            - 100.80.0.0/15
    token: 6yye0e.duwlaqb9dp2sr3f1 # The [bootstrap token](https://kubernetes.io/docs/reference/access-authn-authz/bootstrap-tokens/) used to join the cluster.
    secretboxEncryptionSecret: 8lR8GgHTYu1RtANuk7IZBmjNKhD/9guIFTcw13J3SF8= # A key used for the [encryption of secret data at rest](https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/).
    # The base64 encoded root certificate authority used by Kubernetes.
    ca:
        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJpakNDQVRDZ0F3SUJBZ0lSQU90M0x4ajdHdGNGMklLNktBOEkxS2N3Q2dZSUtvWkl6ajBFQXdJd0ZURVQKTUJFR0ExVUVDaE1LYTNWaVpYSnVaWFJsY3pBZUZ3MHlOVEEzTURVeU1UUXpNRGhhRncwek5UQTNNRE15TVRRegpNRGhhTUJVeEV6QVJCZ05WQkFvVENtdDFZbVZ5Ym1WMFpYTXdXVEFUQmdjcWhrak9QUUlCQmdncWhrak9QUU1CCkJ3TkNBQVRKY3JJWWVaeExqa2pXQXhtaHpOVEZ2L3NrZXJXZW1rU3V1RzhGTDdURGlxditndlZ3bkxmNjhUZW0KZUJ3R0ZrdCthcFFNbTNIU0R5d0RENlpLY2xSM28yRXdYekFPQmdOVkhROEJBZjhFQkFNQ0FvUXdIUVlEVlIwbApCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPCkJCWUVGR2RYZytLaDdJd1AyL0o0Qk80K1RFNHh3ZmpQTUFvR0NDcUdTTTQ5QkFNQ0EwZ0FNRVVDSUFvdGh5VlkKS0RwVzJYUUROQWJqYzdCT2d3WjIxeEZKZWg0cTRkcGZIZUN1QWlFQTBya1hmSXNHeUNZbVdQcU05aDQxY3I4cApQNWtsZXF3di9URzg4Z05zaFFvPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
        key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUQ4Ukd4UW9WV3FOb1BEYy8xM2dtWUYyK2xkMXpjZ2Z1TG5qWTZybWZiT3FvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFeVhLeUdIbWNTNDVJMWdNWm9jelV4Yi83SkhxMW5wcEVycmh2QlMrMHc0cXIvb0wxY0p5MwordkUzcG5nY0JoWkxmbXFVREp0eDBnOHNBdyttU25KVWR3PT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=
    # The base64 encoded aggregator certificate authority used by Kubernetes for front-proxy certificate generation.
    aggregatorCA:
        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJZRENDQVFXZ0F3SUJBZ0lRTWI1WWcvUi9IangwOWVOYmk2bzlHekFLQmdncWhrak9QUVFEQWpBQU1CNFgKRFRJMU1EY3dOVEl4TkRNd09Gb1hEVE0xTURjd016SXhORE13T0Zvd0FEQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxRwpTTTQ5QXdFSEEwSUFCQzFmdUJtdjFwSTNSR0F5ZmFRdm5pUDJDNlRaK2hJYXpnVzd2ZVpOMUVjQTBVZjlBVFhVCnpGOUd0M3k5bmc0cnhYMTRmMTM0aC9YVmpZQUR2aCtrNVZTallUQmZNQTRHQTFVZER3RUIvd1FFQXdJQ2hEQWQKQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBZApCZ05WSFE0RUZnUVVNMEI1NkZ1eS9MaUlwQjNFSm1qU1l2ak84c013Q2dZSUtvWkl6ajBFQXdJRFNRQXdSZ0loCkFNamx2YUtHWVlVUFJVMnl6ejQvZG0zTHlTYWg3cm5WNStJdW42NVcvMTNyQWlFQW5ISXh6dlZVTDFGNExaUGEKQlh0dk1hOEFjZjhDWTVlK0V2NFJ5MWlQTkdnPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
        key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUNrWGZNejEyTzNEVDlpVVpBUmJGTmViQ0tJWkJzcDFSNXo5ZW1kVkFaVzRvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFTFYrNEdhL1dramRFWURKOXBDK2VJL1lMcE5uNkVock9CYnU5NWszVVJ3RFJSLzBCTmRUTQpYMGEzZkwyZURpdkZmWGgvWGZpSDlkV05nQU8rSDZUbFZBPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=
    # The base64 encoded private key for service account token generation.
    serviceAccount:
        key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlKS1FJQkFBS0NBZ0VBcWhEOVdrb3JacXE3dVlxaC9jSlp2MzZwUXlESm15K0cycTdWZC9OWlNGUzg1YW8zCnhDY2FpSEZKNGs1OXdjck96QzB0R2VzRmNhZ0NTWHVMZnVsQWl4ZlZaZXhVcnhxUktuWVZObVhMQTBPL3JvczkKVThZLzlJRmhEWFBOaENWa1MvU3ZCTjBqN29ObjZ1RDZPWFVHMTUrRlhxM3ArVmJ5STA5YjgzYmpVa0ltbjR1dwpYbW5EdmJBVTI1WWJGc2ViY085UTdvZDB2UnBNMGcycVpZb0s3cWUvdVo1aWhMSy95dDB6c2M3YVZUaGZJQm80CkVCZitsbDhWV1NBOGV6MVlJRVFtSVdiRkdHWmhtWGRkTlA4U1VLekllblJGQkwxcDR4aEtxYWZpLzhBU2N6OUoKNjJmK3NjaHhWVlpXSkRVUkhvMW4vcGJVUDdxT3BMM3JBZVliSzBDTVV0SGE2Smo3N0IvQ2Y5OEhLaWp0QWs5Rgp6dldGejdibmZzV0YvTDdlUldSSHk2NDZ1ZHlOUVVuTDFXMUZWM2I4WGttUXNlYVcwZllTSnROeGU3K09ENXFzCnYyNW5SSTlSMVdtVU4yWU9YeG5TSXdsSE1ZV3pmWERlNXFGc3ZuVDBMTWpZSGVpWE1nd2VKK1FXR05UbTNhckoKMW9uWC85U0FVbHJmK2NnRnE1aGtqMERCVTkzNkpmK1JhaWxySm5veHlkSHBHWkdPbktuQTJmMzRBM3FDVHZJSAo1L0FMRFhiaXp2SXl2YVV0MDBFMFdRUnZVSElyaXQ0Vi8razJUWFJwOUo0YlZRb3FDTy9sU3RpRU1LLzQ4SDJ0CjNVSWJudFhPcjg2WUphYzltczR6YTZLb3oxSldXUEJjTGdWdklFaEF6bFpvckMzVFRVOEJFWC93RWpFQ0F3RUEKQVFLQ0FnQVNWSjA0Tm9zZHlHeU9ROFB3MmZwS05vem9Na0FrdU05U1locWFjSmw0bjBDU2lTRzBZK29iVjRtcApDY0NLaXpGMXhxOUlMa0d5bGRNMFNDdVptT3JXNnpGYVNHbzZ5dlJuWlIybGRMeVliQnljbzcrdkdFempyZS9QCjcwSFJPdVlIL1ZaQmdoUDV4UUptQ2N5U3RadFFrYTVDamFDTTJtc2tOTzB5YldlMFliS3Z5dkxPUkZ4ZnBWdGsKTFRaYmd0V05hMUFYKzdQd240VjA5Um5mRXExWnVxMUN4TEIyQU4zRkVBbGV3bzdjTldTa2JVc0thZ21yKzlEdApYN2tCS0JRbit5eDRlRzhwVVh5MjJjdXJOd3lLYzBzekRyWHpQRGJON2x2NjFDQ1dwQ1ZnOUdzRFkzekxmUkZCCksxcUMwZEQzNy9JcitlWWovZGZhNkNrTTFmaHF5TEg2ejg2S2xuS08wVXE1MERCS1FmQzUwRWQxMTJtcWVZc3EKNFBSeTA3SEUrWUlMbnFTNzlCbzRqa0k3aGVIYzl5Z1g1NHRBb2ZDZFIyWm9PdXdlUm1vYThvSFlrTG41eXhjWgpVRkRjNnhiVThEaW5GMnZaMG9XYnZhTWRFSU5ZVHV2YzZVVmNvUmcvRU1Pa3phVWFpNXMvUGdSc2oxZC9VV0kzClRvbUFsK01vN1ZNNWJqTDZranRMVHZ0Y0lNU2w4YkN3VVZSVTdFYzJmbTBiTlJoWDF6SVBIbGE3alBpd0pPM2kKS3VlUzNHV3B2LzR2Z0liTXpwMnRMSkIrOFZ3eEpjeWRKaWNOVFJsQ05hVzBiV2NUS2Q4MkVCR0JYeTlCdGIxZwpoYkJXSW1Wa3FIbm54UjcyNXhXV2RLdGFWSUxtTW9nbkNzUEVaUitKZFJvSmZVZVorUUtDQVFFQTBKd042L1ZlCmJQazZDR053aG93YzBpWjg3N0hDYytHM2xVTVpYSEJHRGFpZ3JoTzdVa01EV0xkTm41QnB6NTNMZk0zZmFOYkMKUGlVN05lQkpUcFRlRTNXZCtzR2RSaC9Lc2Q4TnNSSFpDaWg4TFdQVGl5dXZvcmxVUWVvOWV0R04vZTJKc3JGNAo1WHIvcnFGU0RXNlBuQkpQWk53OFhBUmJmZjBkRjl4QnJlOFBLMnRBREsxUENHaklTcmIyeEFMTjhZTDFKRjhiCkQ0VVpUdHhZSnN5MjNtRDliUTdLT0FDYkVGNEtlL1ZTZjdHOW4zUWo1Tm5DNnFxQU16T1AxVGQ5MDduVTg3cjEKUFE2TFJ2emdJNDhNcHJmUEdQeU9HVTBjTUM1SThhd0pQVGRtN00wYVZ6YjV2VHJ4bGdHYjl0ZElCYWhUaElQTwpPMDVUM3RtWVBQSU91UUtDQVFFQTBMTm9OOFBuTVhiSnE5eVRicjh5R01wejlhSFgyQnRJK01lMkJOOHlocklYCnJPY0J4M01JT0pwTVlnMkM0eVZMUngweFoxMHZhWHdQSFdHTzFCTnZ1ejFJZEtabm42akNUL2tWTGVqRFNEYjUKVy9NTFlVZXdpSGJGQngxQzNIejJRd0ZWZDdYTnVjU1hzYUswVlNEL3ZvVlVkdEhsNEZMbmtIU28yTkZuT2NSagpOZzhqd3p0OUpDM0o1S1lVTklnUDk3dTZSOGRaZ2t5czZlR2QzclNUc3Y5RndRTGpFS0NOUW5qQUI3SnFxYXJaCkM1YjA2U1BCQU5XSDdNUy9VSXRRNnJScE9YMEZDUTFLbSt4WGVpMzM1c0g5dzFuWEFEc0RycWJpU1pjNlgwNFcKdGg4VS9tTnNXTDV4M2ZXN0VGUXo4NkhzSGE5UXhXRXBQQTd2ZG9Pak9RS0NBUUVBak5YZVhEL1NXUFhGWlNabApNS0RsVUVkbHI1a3Q4M2dlcmVtWDlKMWozaExMTDlyb2F6Z015VmN2VTV0MnBCRWU4UW80V3hvcUZ6U2hqZFQzCkNOTmVQbnI0aGZNeXo4WGszVUwraGwzTFRwMVlnSGhWdUM1dExBbTh4YWR6akRodmlWQlYxMHNUbUxINmJoWkIKUkFveGNDZTRiQnAzc1pQTGhQcGVLdDZyaE5iUlFmbnRTdUd5YXJYN0N0NE5LUFhQdmM0dzNEWk5HYVE5R3MyTgp3ZHdSVlg3YmVVWXo1YTBiQXVqS1lUZVZVOXBXYjVGRUxsdUp5VTRFc1F5TmZXQXlWYit1OGtGMUVaeUJFUkxsCjYzdkhDY01zVU8wb3JoSXVCcVVvMytmS2NRYTNPUVdiVStnc29NRnJtbDlKd1ZORUwzV2R0T2diVWxTbU1OeHMKZUREZkdRS0NBUUVBbUZLcGVUSWgxc2RsY0d1QXErOGVpRnVUZ1M5TDA2NHVkMjJFRzFBd2w0RDZxTGErWkswLwp6ZGhJY2JSODJIN0t6Nit0OUV4ZUkzWnByYjhidVF3cW01V2lBWW5HemhBbEtxdVkycll0ZWRLdDgzK1R5Yi9DClNBZXZ6SDU5NDJITmQ2Qk1taC8yZEdUWmRzeFRKR0wrWmpiNEsvVU0rOHBtdXRkNnVTMDFVME5VU2d1SXhhRHcKdUd3M0ZBeG5hT1A2QzQxWDY3WERUY2ZhMktWVVRVeXRGSk1lZlQ0M0xsYVFZM2l3WjYzQURlL2xsSURzWmhFegplQUZod056azZjdVZGb2p3MkFXNG5CKzRXYytKRldMaHNlbmE1aTczTG5Ma1FDQUx2enlDWFRjb2VtcDdMeVN2CjJxRzlpQXduS1ViYjJERlJuV1RzNWZNQlhwVmtEN01LZVFLQ0FRQUc2bXNrL2o3NUx3czhjYlZ3QWh4ZFNYcG4KQVd5bjg1TE5SNHd0aHZzRnV6dXRBTm9CR1ozNGZGakxhajVKYWpNRjFjSzZiSVkwMUE4anhmb1FaL1MrWnRnOAptdW5VUGs4NWNtMDdKVlVvWjZkM0JqV1BsdDByVEZpQXEzU3hkYmZQaTh2ek14ZWhMSi9mcHc0K0xNaGRGUStRCmErbzBwV2pPVk9zYWNQOC9NQisxczBld3RncThhaUJBak1MMllFMHFxUi9YRlhIVEttRHJpVi8yWlZvOGxDangKTlVMWVRGOWlqQ25ZK05yQjgxc2N4TEIwUzFkSnVoWmQ1R3l5T1A2c3lsZ1RYMWVoZldvVE0rNVRzTWlDNTREVQpsYmVmQU8zZWlVNUd2S1ZsZDM4VTVENkpyMlFidnhSRDdsTEV2azNZUW1veUdrc0lHTlpCcXJLQ3VLYU4KLS0tLS1FTkQgUlNBIFBSSVZBVEUgS0VZLS0tLS0K
    # API server specific configuration options.
    apiServer:
        image: registry.k8s.io/kube-apiserver:v1.33.1 # The container image used in the API server manifest.
        # Extra certificate subject alternative names for the API server's certificate.
        certSANs:
            - k8s.prod.mehar.internal
        disablePodSecurityPolicy: true # Disable PodSecurityPolicy in the API server and default manifests.
        # Configure the API server admission plugins.
        admissionControl:
            - name: PodSecurity # Name is the name of the admission controller.
              # Configuration is an embedded configuration object to be used as the plugin's
              configuration:
                apiVersion: pod-security.admission.config.k8s.io/v1alpha1
                defaults:
                    audit: restricted
                    audit-version: latest
                    enforce: baseline
                    enforce-version: latest
                    warn: restricted
                    warn-version: latest
                exemptions:
                    namespaces:
                        - kube-system
                    runtimeClasses: []
                    usernames: []
                kind: PodSecurityConfiguration
        # Configure the API server audit policy.
        auditPolicy:
            apiVersion: audit.k8s.io/v1
            kind: Policy
            rules:
                - level: Metadata
        
        # # Configure the API server authorization config. Node and RBAC authorizers are always added irrespective of the configuration.
        # authorizationConfig:
        #     - type: Webhook # Type is the name of the authorizer. Allowed values are `Node`, `RBAC`, and `Webhook`.
        #       name: webhook # Name is used to describe the authorizer.
        #       # webhook is the configuration for the webhook authorizer.
        #       webhook:
        #         connectionInfo:
        #             type: InClusterConfig
        #         failurePolicy: Deny
        #         matchConditionSubjectAccessReviewVersion: v1
        #         matchConditions:
        #             - expression: has(request.resourceAttributes)
        #             - expression: '!(\''system:serviceaccounts:kube-system\'' in request.groups)'
        #         subjectAccessReviewVersion: v1
        #         timeout: 3s
        #     - type: Webhook # Type is the name of the authorizer. Allowed values are `Node`, `RBAC`, and `Webhook`.
        #       name: in-cluster-authorizer # Name is used to describe the authorizer.
        #       # webhook is the configuration for the webhook authorizer.
        #       webhook:
        #         connectionInfo:
        #             type: InClusterConfig
        #         failurePolicy: NoOpinion
        #         matchConditionSubjectAccessReviewVersion: v1
        #         subjectAccessReviewVersion: v1
        #         timeout: 3s
    # Controller manager server specific configuration options.
    controllerManager:
        image: registry.k8s.io/kube-controller-manager:v1.33.1 # The container image used in the controller manager manifest.
    # Kube-proxy server-specific configuration options
    proxy:
        disabled: true # Disable kube-proxy deployment on cluster bootstrap.
        image: registry.k8s.io/kube-proxy:v1.33.1 # The container image used in the kube-proxy manifest.
    # Scheduler server specific configuration options.
    scheduler:
        image: registry.k8s.io/kube-scheduler:v1.33.1 # The container image used in the scheduler manifest.
    # Configures cluster member discovery.
    discovery:
        enabled: true # Enable the cluster membership discovery feature.
        # Configure registries used for cluster member discovery.
        registries:
            # Kubernetes registry uses Kubernetes API server to discover cluster members and stores additional information
            kubernetes:
                disabled: true # Disable Kubernetes discovery registry.
            # Service registry is using an external service to push and pull information about cluster members.
            service: {}
            # # External service endpoint.
            # endpoint: https://discovery.talos.dev/
    # Etcd specific configuration options.
    etcd:
        # The `ca` is the root certificate authority of the PKI.
        ca:
            crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJmakNDQVNPZ0F3SUJBZ0lRTlpDYmJ1TWFzdTJVWG54TU1rOEhZekFLQmdncWhrak9QUVFEQWpBUE1RMHcKQ3dZRFZRUUtFd1JsZEdOa01CNFhEVEkxTURjd05USXhORE13T0ZvWERUTTFNRGN3TXpJeE5ETXdPRm93RHpFTgpNQXNHQTFVRUNoTUVaWFJqWkRCWk1CTUdCeXFHU000OUFnRUdDQ3FHU000OUF3RUhBMElBQkl1eWFtZWNyLzAyCng1RkYxeEhBdDFtb2hCTDR6S0NDbkJ1THBob1UwNFpUNGJhUVBwRFN5R2xZT3FYeUp5TWVtRVRTdmkwQnE1anUKMFh0ZVk1bDlPVHFqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDaERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjRApBUVlJS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVQWMvWjlLL3oxbjFDCmxEZ2FBVGhNL2dhcHpiSXdDZ1lJS29aSXpqMEVBd0lEU1FBd1JnSWhBT0VDNXJXbE1iZnlzMmNrdW1uSENabHAKT0w4cngwcndpZzRtWlUzZHFTSFVBaUVBM3NHamp5T0ZzUm5rZEFQV0t3OXFXS2RnK24xWXdWWTFhcWpLdzZWRAoya0E9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
            key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUoyZk80Z1ZuUVhUUXVLaWhkQUFSQkNhejUwTFZrMkZXczRRanhXWmppLy9vQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFaTdKcVo1eXYvVGJIa1VYWEVjQzNXYWlFRXZqTW9JS2NHNHVtR2hUVGhsUGh0cEEra05MSQphVmc2cGZJbkl4NllSTksrTFFHcm1PN1JlMTVqbVgwNU9nPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=
        # The `advertisedSubnets` field configures the networks to pick etcd advertised IP from.
        advertisedSubnets:
            - 172.29.232.0/24
        
        # # The container image used to create the etcd service.
        # image: gcr.io/etcd-development/etcd:v3.5.21
    # A list of urls that point to additional manifests.
    extraManifests: []
    #   - https://www.example.com/manifest1.yaml
    #   - https://www.example.com/manifest2.yaml

    # A list of inline Kubernetes manifests.
    inlineManifests: []
    #   - name: namespace-ci # Name of the manifest.
    #     contents: |- # Manifest contents as a string.
    #       apiVersion: v1
    #       kind: Namespace
    #       metadata:
    #       	name: ci

    allowSchedulingOnControlPlanes: true # Allows running workload on control-plane nodes.
    
    # # A key used for the [encryption of secret data at rest](https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/).

    # # Decryption secret example (do not use in production!).
    # aescbcEncryptionSecret: z01mye6j16bspJYtTB/5SFX8j7Ph4JXxM2Xuu4vsBPM=

    # # Core DNS specific configuration options.
    # coreDNS:
    #     image: registry.k8s.io/coredns/coredns:v1.12.1 # The `image` field is an override to the default coredns image.

    # # External cloud provider configuration.
    # externalCloudProvider:
    #     enabled: true # Enable external cloud provider.
    #     # A list of urls that point to additional manifests for an external cloud provider.
    #     manifests:
    #         - https://raw.githubusercontent.com/kubernetes/cloud-provider-aws/v1.20.0-alpha.0/manifests/rbac.yaml
    #         - https://raw.githubusercontent.com/kubernetes/cloud-provider-aws/v1.20.0-alpha.0/manifests/aws-cloud-controller-manager-daemonset.yaml

    # # A map of key value pairs that will be added while fetching the extraManifests.
    # extraManifestHeaders:
    #     Token: "1234567"
    #     X-ExtraInfo: info

    # # Settings for admin kubeconfig generation.
    # adminKubeconfig:
    #     certLifetime: 1h0m0s # Admin kubeconfig certificate lifetime (default is 1 year).
---
apiVersion: v1alpha1
kind: ExtensionServiceConfig
name: lldpd # Name of the extension service.
# The config files for the extension service.
configFiles:
    - content: | # The content of the extension service config file.
        configure lldp portidsubtype ifname
        unconfigure lldp management-addresses-advertisements
        unconfigure lldp capabilities-advertisements
        configure system description "Talos Node"
      mountPath: /usr/local/etc/lldpd/lldpd.conf # The mount path of the extension service config file.
